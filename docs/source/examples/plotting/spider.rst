.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_plotting_spider.py:


Spider Plots
==============


.. code-block:: default

    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt
    from pyrolite.plot import pyroplot
    from pyrolite.plot.spider import spider
    from pyrolite.geochem.ind import common_elements

    np.random.seed(82)








.. code-block:: default

    els = common_elements(cutoff=47)[10:]
    ys = np.random.rand(3, len(els))
    ys = np.exp(ys)
    df = pd.DataFrame(data=ys, columns=els)

    ax = df.loc[0, :].pyroplot.spider(color="k")
    ax.set_ylabel("Abundance")
    plt.show()



.. image:: /examples/plotting/images/sphx_glr_spider_001.png
    :class: sphx-glr-single-img





This behaviour can be modified (see spider docs) to provide filled ranges:


.. code-block:: default

    ax = df.pyroplot.spider(mode="fill", color="k", alpha=0.5)
    ax.set_ylabel("Abundance")
    plt.show()



.. image:: /examples/plotting/images/sphx_glr_spider_002.png
    :class: sphx-glr-single-img





The plotting axis can be specified to use exisiting axes:


.. code-block:: default

    fig, ax = plt.subplots(2, 1, sharex=True, sharey=True, figsize=(10, 6))
    ax[0].set_ylabel("Abundance")

    df.pyroplot.spider(ax=ax[0], color="k")
    df.pyroplot.spider(ax=ax[1], mode="fill", color="k", alpha=0.5)

    plt.tight_layout()



.. image:: /examples/plotting/images/sphx_glr_spider_003.png
    :class: sphx-glr-single-img





Spidergrams are most commonly used to disply normalised abundances. This is easily
accomplished using :mod:`pyrolite.geochem.norm`:


.. code-block:: default


    normdf = df.pyrochem.normalize_to("Chondrite_PON", units="ppm")

    ax = spider(normdf.values, color="k")
    # or, alternatively directly from the dataframe:
    ax = normdf.pyroplot.spider(color="k")

    ax.set_ylabel("Abundance / Chondrite")
    plt.show()



.. image:: /examples/plotting/images/sphx_glr_spider_004.png
    :class: sphx-glr-single-img





.. seealso:: `Spider Density Diagrams <conditionaldensity.html>`__,
             `Normalisation <../geochem/normalization.html>`__,
             `REE Radii Plot <REE_v_radii.html>`__,
             `REE Dimensional Reduction <../lambdas/lambdadimreduction.html>`__


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.622 seconds)


.. _sphx_glr_download_examples_plotting_spider.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: https://mybinder.org/badge_logo.svg
      :target: https://mybinder.org/v2/gh/morganjwilliams/pyrolite/develop?filepath=docs/source/examples/plotting/spider.ipynb
      :width: 150 px


  .. container:: sphx-glr-download

     :download:`Download Python source code: spider.py <spider.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: spider.ipynb <spider.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
